{"mode":"editor","version":1,"windowDimensions":{"x":960,"y":69,"width":960,"height":1011,"maximized":false},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/home/david/src/node-v4.2.1"],"buffers":[{"text":"\nNode.js\n=====\n\n[![Gitter](https://badges.gitter.im/Join Chat.svg)](https://gitter.im/nodejs/node?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nThis repository began as a GitHub fork of\n[joyent/node](https://github.com/joyent/node).\n\nNode.js contributions, releases, and contributorship are under an\n[open governance model](./GOVERNANCE.md).\nWe intend to land, with increasing regularity, releases which are\ncompatible with the npm ecosystem that has been built to date for\nNode.js.\n\n## Download\n\nBinaries, installers, and source tarballs are available at\n<https://nodejs.org>.\n\n**Releases** are available at <https://nodejs.org/dist/>, listed under\ntheir version string. The <https://nodejs.org/dist/latest/> symlink\nwill point to the latest release directory.\n\n**Nightly** builds are available at\n<https://nodejs.org/download/nightly/>, listed under their version\nstring which includes their date (in UTC time) and the commit SHA at\nthe HEAD of the release.\n\n**API documentation** is available in each release and nightly\ndirectory under _docs_. <https://nodejs.org/api/> points to the latest version.\n\n### Verifying Binaries\n\nRelease and nightly download directories all contain a *SHASUM256.txt*\nfile that lists the SHA checksums for each file available for\ndownload. To check that a downloaded file matches the checksum, run\nit through `sha256sum` with a command such as:\n\n```\n$ grep node-vx.y.z.tar.gz SHASUMS256.txt | sha256sum -c -\n```\n\n_(Where \"node-vx.y.z.tar.gz\" is the name of the file you have\ndownloaded)_\n\nAdditionally, releases (not nightlies) have GPG signed copies of\nSHASUM256.txt files available as SHASUM256.txt.asc. You can use `gpg`\nto verify that the file has not been tampered with.\n\nTo verify a SHASUM256.txt.asc, you will first need to import all of\nthe GPG keys of individuals authorized to create releases. They are\nlisted at the bottom of this README under [Release Team](#release-team).\nUse a command such as this to import the keys:\n\n```\n$ gpg --keyserver pool.sks-keyservers.net \\\n  --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D\n```\n\n_(See the bottom of this README for a full script to import active\nrelease keys)_\n\nYou can then use `gpg --verify SHASUMS256.txt.asc` to verify that the\nfile has been signed by an authorized member of the Node.js team.\n\nOnce verified, use the SHASUMS256.txt.asc file to get the checksum for\nthe binary verification command above.\n\n## Build\n\n### Unix / Macintosh\n\nPrerequisites:\n\n* `gcc` and `g++` 4.8 or newer, or\n* `clang` and `clang++` 3.4 or newer\n* Python 2.6 or 2.7\n* GNU Make 3.81 or newer\n* libexecinfo (FreeBSD and OpenBSD only)\n\n```text\n$ ./configure\n$ make\n$ [sudo] make install\n```\n\nIf your Python binary is in a non-standard location or has a\nnon-standard name, run the following instead:\n\n```text\n$ export PYTHON=/path/to/python\n$ $PYTHON ./configure\n$ make\n$ [sudo] make install\n```\n\nTo run the tests:\n\n```text\n$ make test\n```\n\nTo build the documentation:\n\n```text\n$ make doc\n```\n\nTo read the documentation:\n\n```text\n$ man doc/node.1\n```\n\nTo test if Node.js was built correctly:\n\n```\n$ node -e \"console.log('Hello from node.js ' + process.version)\"\n```\n\n### Windows\n\nPrerequisites:\n\n* [Python 2.6 or 2.7](https://www.python.org/downloads/)\n* Visual Studio 2013 for Windows Desktop, or\n* Visual Studio Express 2013 for Windows Desktop\n* Basic Unix tools required for some tests,\n  [Git for Windows](http://git-scm.com/download/win) includes Git Bash\n  and tools which can be included in the global `PATH`.\n\n```text\n> vcbuild nosign\n```\n\nTo run the tests:\n\n```text\n> vcbuild test\n```\n\nTo test if Node.js was built correctly:\n\n```\n$ node -e \"console.log('Hello from node.js ' + process.version)\"\n```\n\n### Android / Android based devices, aka. Firefox OS\n\nBe sure you have downloaded and extracted [Android NDK]\n(https://developer.android.com/tools/sdk/ndk/index.html)\nbefore in a folder. Then run:\n\n```\n$ ./android-configure /path/to/your/android-ndk\n$ make\n```\n\n### `Intl` (ECMA-402) support:\n\n[Intl](https://github.com/nodejs/node/wiki/Intl) support is not\nenabled by default.\n\n#### \"small\" (English only) support\n\nThis option will build with \"small\" (English only) support, but\nthe full `Intl` (ECMA-402) APIs.  With `--download=all` it will\ndownload the ICU library as needed.\n\nUnix / Macintosh:\n\n```text\n$ ./configure --with-intl=small-icu --download=all\n```\n\nWindows:\n\n```text\n> vcbuild small-icu download-all\n```\n\nThe `small-icu` mode builds with English-only data. You can add full\ndata at runtime.\n\n*Note:* more docs are on\n[the node wiki](https://github.com/nodejs/node/wiki/Intl).\n\n#### Build with full ICU support (all locales supported by ICU):\n\nWith the `--download=all`, this may download ICU if you don't have an\nICU in `deps/icu`.\n\nUnix / Macintosh:\n\n```text\n$ ./configure --with-intl=full-icu --download=all\n```\n\nWindows:\n\n```text\n> vcbuild full-icu download-all\n```\n\n#### Build with no Intl support `:-(`\n\nThe `Intl` object will not be available. This is the default at\npresent, so this option is not normally needed.\n\nUnix / Macintosh:\n\n```text\n$ ./configure --with-intl=none\n```\n\nWindows:\n\n```text\n> vcbuild intl-none\n```\n\n#### Use existing installed ICU (Unix / Macintosh only):\n\n```text\n$ pkg-config --modversion icu-i18n && ./configure --with-intl=system-icu\n```\n\n#### Build with a specific ICU:\n\nYou can find other ICU releases at\n[the ICU homepage](http://icu-project.org/download).\nDownload the file named something like `icu4c-**##.#**-src.tgz` (or\n`.zip`).\n\nUnix / Macintosh\n\n```text\n# from an already-unpacked ICU:\n$ ./configure --with-intl=[small-icu,full-icu] --with-icu-source=/path/to/icu\n\n# from a local ICU tarball\n$ ./configure --with-intl=[small-icu,full-icu] --with-icu-source=/path/to/icu.tgz\n\n# from a tarball URL\n$ ./configure --with-intl=full-icu --with-icu-source=http://url/to/icu.tgz\n```\n\nWindows\n\nFirst unpack latest ICU to `deps/icu`\n[icu4c-**##.#**-src.tgz](http://icu-project.org/download) (or `.zip`)\nas `deps/icu` (You'll have: `deps/icu/source/...`)\n\n```text\n> vcbuild full-icu\n```\n\n# Building Node.js with FIPS-compliant OpenSSL\n\nNOTE: Windows is not yet supported\n\nIt is possible to build Node.js with\n[OpenSSL FIPS module](https://www.openssl.org/docs/fips/fipsnotes.html).\n\n**Note** that building in this way does **not** allow you to\nclaim that the runtime is FIPS 140-2 validated.  Instead you\ncan indicate that the runtime uses a validated module.  See\nthe [security policy]\n(http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140sp/140sp1747.pdf)\npage 60 for more details.  In addition, the validation for\nthe underlying module is only valid if it is deployed in\naccordance with its [security policy]\n(http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140sp/140sp1747.pdf).\nIf you need FIPS validated cryptography it is recommended that you\nread both the [security policy]\n(http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140sp/140sp1747.pdf)\nand [user guide] (https://openssl.org/docs/fips/UserGuide-2.0.pdf).\n\nInstructions:\n\n1. Obtain a copy of openssl-fips-x.x.x.tar.gz.\n   To comply with the security policy you must ensure the path\n   through which you get the file complies with the requirements\n   for a \"secure installation\" as described in section 6.6 in\n   the [user guide] (https://openssl.org/docs/fips/UserGuide-2.0.pdf).\n   For evaluation/experimentation you can simply download and verify\n   `openssl-fips-x.x.x.tar.gz` from https://www.openssl.org/source/\n2. Extract source to `openssl-fips` folder and `cd openssl-fips`\n3. `./config`\n4. `make`\n5. `make install`\n   (NOTE: to comply with the security policy you must use the exact\n   commands in steps 3-5 without any additional options as per\n   Appendix A in the [security policy]\n   (http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140sp/140sp1747.pdf).\n   The only exception is that `./config no-asm` can be\n   used in place of `./config` )\n6. Get into Node.js checkout folder\n7. `./configure --openssl-fips=/path/to/openssl-fips/installdir`\n   For example on ubuntu 12 the installation directory was\n   /usr/local/ssl/fips-2.0\n8. Build Node.js with `make -j`\n9. Verify with `node -p \"process.versions.openssl\"` (`1.0.2a-fips`)\n\n## Resources for Newcomers\n\n* [CONTRIBUTING.md](./CONTRIBUTING.md)\n* [GOVERNANCE.md](./GOVERNANCE.md)\n* IRC:\n  [#io.js on Freenode.net](http://webchat.freenode.net?channels=io.js&uio=d4)\n* [nodejs/node on Gitter](https://gitter.im/nodejs/node)\n\n## Security\n\nAll security bugs in node.js are taken seriously and should be reported by\nemailing security@nodejs.org. This will be delivered to a subset of the project\nteam who handle security issues. Please don't disclose security bugs\npublic until they have been handled by the security team.\n\nYour email will be acknowledged within 24 hours, and you’ll receive a more\ndetailed response to your email within 48 hours indicating the next steps in\nhandling your report.\n\n## Current Project Team Members\n\nThe Node.js project team comprises a group of core collaborators and a sub-group\nthat forms the _Technical Steering Committee_ (TSC) which governs the project. For more\ninformation about the governance of the Node.js project, see\n[GOVERNANCE.md](./GOVERNANCE.md).\n\n### TSC (Technical Steering Committee)\n\n* [bnoordhuis](https://github.com/bnoordhuis) - **Ben Noordhuis** &lt;info@bnoordhuis.nl&gt;\n* [chrisdickinson](https://github.com/chrisdickinson) - **Chris Dickinson** &lt;christopher.s.dickinson@gmail.com&gt;\n* [cjihrig](https://github.com/cjihrig) - **Colin Ihrig** &lt;cjihrig@gmail.com&gt;\n* [fishrock123](https://github.com/fishrock123) - **Jeremiah Senkpiel** &lt;fishrock123@rocketmail.com&gt;\n* [indutny](https://github.com/indutny) - **Fedor Indutny** &lt;fedor.indutny@gmail.com&gt;\n* [jasnell](https://github.com/jasnell) - **James M Snell** &lt;jasnell@gmail.com&gt;\n* [misterdjules](https://github.com/misterdjules) - **Julien Gilli** &lt;jgilli@nodejs.org&gt;\n* [mscdex](https://github.com/mscdex) - **Brian White** &lt;mscdex@mscdex.net&gt;\n* [orangemocha](https://github.com/orangemocha) - **Alexis Campailla** &lt;orangemocha@nodejs.org&gt;\n* [piscisaureus](https://github.com/piscisaureus) - **Bert Belder** &lt;bertbelder@gmail.com&gt;\n* [rvagg](https://github.com/rvagg) - **Rod Vagg** &lt;rod@vagg.org&gt;\n* [shigeki](https://github.com/shigeki) - **Shigeki Ohtsu** &lt;ohtsu@iij.ad.jp&gt;\n* [trevnorris](https://github.com/trevnorris) - **Trevor Norris** &lt;trev.norris@gmail.com&gt;\n\n### Collaborators\n\n* [brendanashworth](https://github.com/brendanashworth) - **Brendan Ashworth** &lt;brendan.ashworth@me.com&gt;\n* [ChALkeR](https://github.com/ChALkeR) - **Сковорода Никита Андреевич** &lt;chalkerx@gmail.com&gt;\n* [domenic](https://github.com/domenic) - **Domenic Denicola** &lt;d@domenic.me&gt;\n* [evanlucas](https://github.com/evanlucas) - **Evan Lucas** &lt;evanlucas@me.com&gt;\n* [geek](https://github.com/geek) - **Wyatt Preul** &lt;wpreul@gmail.com&gt;\n* [isaacs](https://github.com/isaacs) - **Isaac Z. Schlueter** &lt;i@izs.me&gt;\n* [jbergstroem](https://github.com/jbergstroem) - **Johan Bergström** &lt;bugs@bergstroem.nu&gt;\n* [joaocgreis](https://github.com/joaocgreis) - **João Reis** &lt;reis@janeasystems.com&gt;\n* [julianduque](https://github.com/julianduque) - **Julian Duque** &lt;julianduquej@gmail.com&gt;\n* [lxe](https://github.com/lxe) - **Aleksey Smolenchuk** &lt;lxe@lxe.co&gt;\n* [mhdawson](https://github.com/mhdawson) - **Michael Dawson** &lt;michael_dawson@ca.ibm.com&gt;\n* [micnic](https://github.com/micnic) - **Nicu Micleușanu** &lt;micnic90@gmail.com&gt;\n* [mikeal](https://github.com/mikeal) - **Mikeal Rogers** &lt;mikeal.rogers@gmail.com&gt;\n* [monsanto](https://github.com/monsanto) - **Christopher Monsanto** &lt;chris@monsan.to&gt;\n* [ofrobots](https://github.com/ofrobots) - **Ali Ijaz Sheikh** &lt;ofrobots@google.com&gt;\n* [Olegas](https://github.com/Olegas) - **Oleg Elifantiev** &lt;oleg@elifantiev.ru&gt;\n* [petkaantonov](https://github.com/petkaantonov) - **Petka Antonov** &lt;petka_antonov@hotmail.com&gt;\n* [qard](https://github.com/qard) - **Stephen Belanger** &lt;admin@stephenbelanger.com&gt;\n* [rlidwka](https://github.com/rlidwka) - **Alex Kocharin** &lt;alex@kocharin.ru&gt;\n* [robertkowalski](https://github.com/robertkowalski) - **Robert Kowalski** &lt;rok@kowalski.gd&gt;\n* [sam-github](https://github.com/sam-github) - **Sam Roberts** &lt;vieuxtech@gmail.com&gt;\n* [seishun](https://github.com/seishun) - **Nikolai Vavilov** &lt;vvnicholas@gmail.com&gt;\n* [silverwind](https://github.com/silverwind) - **Roman Reiss** &lt;me@silverwind.io&gt;\n* [srl295](https://github.com/srl295) - **Steven R Loomis** &lt;srloomis@us.ibm.com&gt;\n* [targos](https://github.com/targos) - **Michaël Zasso** &lt;mic.besace@gmail.com&gt;\n* [tellnes](https://github.com/tellnes) - **Christian Tellnes** &lt;christian@tellnes.no&gt;\n* [thefourtheye](https://github.com/thefourtheye) - **Sakthipriyan Vairamani** &lt;thechargingvolcano@gmail.com&gt;\n* [thlorenz](https://github.com/thlorenz) - **Thorsten Lorenz** &lt;thlorenz@gmx.de&gt;\n* [Trott](https://github.com/Trott) - **Rich Trott** &lt;rtrott@gmail.com&gt;\n* [tunniclm](https://github.com/tunniclm) - **Mike Tunnicliffe** &lt;m.j.tunnicliffe@gmail.com&gt;\n* [vkurchatkin](https://github.com/vkurchatkin) - **Vladimir Kurchatkin** &lt;vladimir.kurchatkin@gmail.com&gt;\n* [yosuke-furukawa](https://github.com/yosuke-furukawa) - **Yosuke Furukawa** &lt;yosuke.furukawa@gmail.com&gt;\n\nCollaborators & TSC members follow the [COLLABORATOR_GUIDE.md](./COLLABORATOR_GUIDE.md) in\nmaintaining the Node.js project.\n\n### Release Team\n\nReleases of Node.js and io.js will be signed with one of the following GPG keys:\n\n* **Chris Dickinson** &lt;christopher.s.dickinson@gmail.com&gt;: `9554F04D7259F04124DE6B476D5A82AC7E37093B`\n* **Colin Ihrig** &lt;cjihrig@gmail.com&gt; `94AE36675C464D64BAFA68DD7434390BDBE9B9C5`\n* **Sam Roberts** &lt;octetcloud@keybase.io&gt; `0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93`\n* **Jeremiah Senkpiel** &lt;fishrock@keybase.io&gt; `FD3A5288F042B6850C66B31F09FE44734EB7990E`\n* **James M Snell** &lt;jasnell@keybase.io&gt; `71DCFD284A79C3B38668286BC97EC7A07EDE3FC1`\n* **Rod Vagg** &lt;rod@vagg.org&gt; `DD8F2338BAE7501E3DD5AC78C273792F7D83545D`\n\nThe full set of trusted release keys can be imported by running:\n\n```\ngpg --keyserver pool.sks-keyservers.net --recv-keys 9554F04D7259F04124DE6B476D5A82AC7E37093B\ngpg --keyserver pool.sks-keyservers.net --recv-keys 94AE36675C464D64BAFA68DD7434390BDBE9B9C5\ngpg --keyserver pool.sks-keyservers.net --recv-keys 0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93\ngpg --keyserver pool.sks-keyservers.net --recv-keys FD3A5288F042B6850C66B31F09FE44734EB7990E\ngpg --keyserver pool.sks-keyservers.net --recv-keys 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1\ngpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D\n```\n\nSee the section above on [Verifying Binaries](#verifying-binaries) for\ndetails on what to do with these keys to verify that a downloaded file is official.\n\nPrevious releases of Node.js have been signed with one of the following GPG\nkeys:\n\n* Julien Gilli &lt;jgilli@fastmail.fm&gt; `114F43EE0176B71C7BC219DD50A3051F888C628D`\n* Timothy J Fontaine &lt;tjfontaine@gmail.com&gt; `7937DFD2AB06298B2293C3187D33FF9D0246406D`\n* Isaac Z. Schlueter &lt;i@izs.me&gt; `93C7E9E91B49E432C2F75674B0A78B0A6C481CF6`\n","markerStore":{"nextMarkerId":199,"markersById":{"0":{"range":{"start":{"row":95,"column":2},"end":{"row":95,"column":2}},"properties":{"type":"selection","editorId":8,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/david/src/node-v4.2.1/README.md","digestWhenLastPersisted":"d4a32e44718e66dc7a3d4e60e8ec8bec83f42b21","preferredLineEnding":null,"deserializer":"TextBuffer","version":2}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":8,"softTabs":true,"displayBuffer":{"id":9,"softWrapped":true,"scrollTop":1120,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/david/src/node-v4.2.1/README.md","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/home/david/src/node-v4.2.1/README.md","focused":false,"flexScale":1,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-gfm","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/home/david/src/node-v4.2.1/README.md":1445043053795},"metrics":{"sessionLength":2490767},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/home/david/src/node-v4.2.1":{"isExpanded":false,"entries":{}}},"selectedPath":"/home/david/src/node-v4.2.1","hasFocus":true,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}